name: API Ecom Journey CD

on:
  workflow_dispatch:
    inputs:
      testType:
        type: choice
        description: 'Test Type'
        options: 
          - regression
          - sanity

  # schedule:
  #   - cron: '00 6 * * *'

env:
  PROJECT_NAME: ecom
  DEVICE: api
  MODE: headless   
  DOWNLOAD_PATH: cypress/fixtures/downloads
  AUTH_DOMAIN: ${{ secrets.AUTH_DOMAIN }}
  AUTH_SCOPE: ${{ secrets.AUTH_SCOPE }}  
  ECOM_MANAG_AUTH_ADMIN_USERNAME: ${{ secrets.ECOM_MANAG_AUTH_ADMIN_USERNAME }}
  ECOM_MANAG_AUTH_ADMIN_PWD: ${{ secrets.ECOM_MANAG_AUTH_ADMIN_PWD }}
  ECOM_API_BASEURL: ${{ secrets.ECOM_API_BASEURL }}

jobs:
  api-ecom-dev:
    continue-on-error: false
    strategy:
        fail-fast: false
        matrix:
          name: ["chrome"]
    name: Ecom API Sanity Tests
    runs-on: ubuntu-latest
    if: contains(github.event.inputs.testType, 'sanity')
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Install Docker Compose
        run: sudo apt-get install -y docker-compose

      - name: create env file
        run: |
          env > .env
          cat .env

      - name: Run Sanity tests - Chrome Headless
        if: ${{ contains(matrix.name, 'chrome') }}
        run: docker-compose -f 'docker-compose.yml' up --build cypress-test
        env:
          TEST_TYPE: sanity
          BROWSER: chrome
          FEATURE: EcomJourney
          ECOM_MANAG_AUTH_ADMIN_USERNAME: ${{ secrets.ECOM_MANAG_AUTH_ADMIN_USERNAME }}
          ECOM_MANAG_AUTH_ADMIN_PWD: ${{ secrets.ECOM_MANAG_AUTH_ADMIN_PWD }}
          ECOM_CLIENT_UI_BASEURL: ${{ secrets.ECOM_CLIENT_UI_BASEURL }}
          ECOM_API_BASEURL: ${{ secrets.ECOM_API_BASEURL }}
          
      - name: Generate HTML Report
        if: ${{ contains(matrix.name, 'chrome') }}
        run: docker-compose -f 'docker-compose.yml' up ecom-report-html
        env:
          BROWSER: chrome
      
      - name: Storage HTML Report
        if: ${{ contains(matrix.name, 'chrome') }}  
        uses: actions/upload-artifact@v4
        with: 
          name: API Sanity Report - Chrome
          path: cypress/test-results/

      - name: Log Start Time
        run: date
     
      - name: Generate Log
        id: log
        run: |
          docker-compose -f "docker-compose.yml" logs -f >> cypress-test.log
          echo "test-result=$(grep -oh -m 1 'AssertionError\|CypressError\|failing\|Error:' cypress-test.log)">> $GITHUB_OUTPUT

     
      - name: Test Result - FAILED
        if: contains(steps.log.outputs.test-result, 'Error') || contains(steps.log.outputs.test-result, 'failing')
        uses: actions/github-script@v6
        with:
          script: |
              core.setFailed('Test Result: FAILED')

      - name: Test Result - PASSED
        if: "!contains(steps.log.outputs.test-result, 'Error') || !contains(steps.log.outputs.test-result, 'failing')"
        run: |
          echo "Test Result: PASSED"

  api-ecom-prod:
    continue-on-error: false
    strategy:
        fail-fast: false
        matrix:
          name: ["chrome"]

    name: Ecom API Regression Tests
    runs-on: ubuntu-latest
    if: contains(github.event.inputs.testType, 'regression')
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Install Docker Compose
        run: sudo apt-get install -y docker-compose

      - name: create env file
        run: |
          env > .env
          cat .env

      - name: Run Regression tests - Chrome Headless
        if: ${{ contains(matrix.name, 'chrome') }}
        run: docker-compose -f 'docker-compose.yml' up --build cypress-test
        env:
          TEST_TYPE: regression
          BROWSER: chrome
          FEATURE: EcomJourney
          ECOM_MANAG_AUTH_ADMIN_USERNAME: ${{ secrets.ECOM_MANAG_AUTH_ADMIN_USERNAME }}
          ECOM_MANAG_AUTH_ADMIN_PWD: ${{ secrets.ECOM_MANAG_AUTH_ADMIN_PWD }}
          ECOM_CLIENT_UI_BASEURL: ${{ secrets.ECOM_CLIENT_UI_BASEURL }}
          ECOM_API_BASEURL: ${{ secrets.ECOM_API_BASEURL }}
        
      - name: Generate HTML Report
        if: ${{ contains(matrix.name, 'chrome') }}
        run: docker-compose -f 'docker-compose.yml' up ecom-report-html
        env:
          BROWSER: chrome
      
      - name: Storage HTML Report
        if: ${{ contains(matrix.name, 'chrome') }}  
        uses: actions/upload-artifact@v4
        with: 
          name: API Regression Report - Chrome
          path: cypress/test-results/

      - name: Publish Reports to Separate Repo
        if: ${{ contains(matrix.name, 'chrome') }}
        uses: peaceiris/actions-gh-pages@v4
        with:
          personal_token: ${{ secrets.REPORTS_REPO_TOKEN }}
          external_repository: Scoder-Tech/ecom-test-reports
          publish_dir: ./cypress/test-results/html
          destination_dir: ui/EcomJourney/regression/chrome
          cache-control: no-cache

      - name: Log Start Time
        run: date
      
      - name: Generate Log
        id: log
        run: |
          docker-compose -f "docker-compose.yml" logs -f >> cypress-test.log
          echo "test-result=$(grep -oh -m 1 'AssertionError\|CypressError\|failing\|Error:' cypress-test.log)">> $GITHUB_OUTPUT

      - name: Show Log
        run: cat cypress-test.log
     
      - name: Test Result - FAILED
        if: contains(steps.log.outputs.test-result, 'Error') || contains(steps.log.outputs.test-result, 'failing')
        uses: actions/github-script@v6
        with:
          script: |
              core.setFailed('Test Result: FAILED')

      - name: Test Result - PASSED
        if: "!contains(steps.log.outputs.test-result, 'Error') || !contains(steps.log.outputs.test-result, 'failing')"
        run: |
          echo "Test Result: PASSED"