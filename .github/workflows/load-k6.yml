name: K6 Load Test

on:
  workflow_dispatch:
    inputs:
      request_type:
        type: choice
        description: 'Tipo de requisição (GET ou POST)'
        options:
          - GET
          - POST
      base_url:
        description: 'Base URL para teste'
        required: true
        default: 'https://api-hml.ilotto.com.br'
      post_body:
        description: 'Corpo da requisição POST (JSON)'
        required: false
        default: '{"raffleId":"ea65656e-7a6c-404c-afbc-7a5f233eff5c","ticketsAmount":1,"customerId":"020a1e1b-526b-416d-894c-ba6e7f2f5068","email":"rodrigo.oliveira@scoder.com.br","cpf":"12622755635","phone":"5535992027336","isFromBalance":false,"purchaseWithPromotion":false}'
      virtual_users_ramp_up:
        description: 'VUs em Ramp-Up'
        required: true
        default: '10'
      virtual_users_constant:
        description: 'VUs no tempo constante'
        required: true
        default: '10'
      virtual_users_ramp_down:
        description: 'VUs em Ramp-Down'
        required: true
        default: '0'
      test_duration_ramp_up:
        description: 'Tempo de Ramp-Up (ex: 5m)'
        required: true
        default: '5s'
      test_duration_constant:
        description: 'Tempo constante (ex: 20m)'
        required: true
        default: '10s'
      test_duration_ramp_down:
        description: 'Tempo de Ramp-Down (ex: 5m)'
        required: true
        default: '5s'

env:
  VIRTUAL_USERS_RAMP_UP: ${{ secrets.VIRTUAL_USERS_RAMP_UP }}
  VIRTUAL_USERS_CONSTANT: ${{ secrets.VIRTUAL_USERS_CONSTANT }}
  VIRTUAL_USERS_RAMP_DOWN: ${{ secrets.VIRTUAL_USERS_RAMP_DOWN }}
  TEST_DURATION_RAMP_UP: ${{ secrets.TEST_DURATION_RAMP_UP }}
  TEST_DURATION_CONSTANT: ${{ secrets.TEST_DURATION_CONSTANT }}
  TEST_DURATION_RAMP_DOWN: ${{ secrets.TEST_DURATION_RAMP_DOWN }}
  BASE_URL: ${{ secrets.BASE_URL }}
  REQUEST_TYPE: ${{ secrets.REQUEST_TYPE }}
  # POST_BODY: ${{ secrets.POST_BODY }}

jobs:
  load-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Install k6
        run: |
          curl -sL https://github.com/grafana/k6/releases/download/v0.42.0/k6-v0.42.0-linux-amd64.deb -o k6.deb
          sudo dpkg -i k6.deb
          sudo apt-get install -f

      - name: Set up environment variables
        run: |
          echo "VIRTUAL_USERS_RAMP_UP=${{ github.event.inputs.virtual_users_ramp_up }}" >> $GITHUB_ENV
          echo "VIRTUAL_USERS_CONSTANT=${{ github.event.inputs.virtual_users_constant }}" >> $GITHUB_ENV
          echo "VIRTUAL_USERS_RAMP_DOWN=${{ github.event.inputs.virtual_users_ramp_down }}" >> $GITHUB_ENV
          echo "TEST_DURATION_RAMP_UP=${{ github.event.inputs.test_duration_ramp_up }}" >> $GITHUB_ENV
          echo "TEST_DURATION_CONSTANT=${{ github.event.inputs.test_duration_constant }}" >> $GITHUB_ENV
          echo "TEST_DURATION_RAMP_DOWN=${{ github.event.inputs.test_duration_ramp_down }}" >> $GITHUB_ENV
          echo "BASE_URL=${{ github.event.inputs.base_url }}" >> $GITHUB_ENV
          echo "REQUEST_TYPE=${{ github.event.inputs.request_type }}" >> $GITHUB_ENV
          echo '${{ toJSON(github.event.inputs.post_body) }}' > post_body.json

        ### echo "POST_BODY=${{ github.event.inputs.post_body }}" >> $GITHUB_ENV

      - name: Run K6 load test
        run: |
          docker-compose run --rm --user root k6-load-test sh
          mkdir -p performance/reports
          cd performance/
          k6 run loadTest.js

      - name: Upload K6 HTML Report
        uses: actions/upload-artifact@v4
        with:
          name: K6 Load Test Report
          path: performance/reports/indexLoad.html

      - name: Publish Reports to Separate Repo
        uses: peaceiris/actions-gh-pages@v4
        with:
          personal_token: ${{ secrets.PERFORMANCE_REPORTS_REPO_TOKEN }}
          external_repository: rodrigosalles7/performance-test-reports
          publish_dir: ./performance/reports
          destination_dir: load-tests/reports
