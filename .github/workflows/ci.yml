name: CI

on:
  pull_request:
    branches: [main]

  workflow_dispatch:

env:
  TEST_TYPE: regression
  DEVICE: web
  MODE: headless
  IS_CI: CI
  DOWNLOAD_PATH: cypress/fixtures/downloads
  ECOM_UI_BASEURL: ${{ secrets.ECOM_UI_BASEURL }}

jobs:
  ui-ecom-tests:
    continue-on-error: false
    strategy:
      fail-fast: false
      matrix:
        name: ['chrome', 'firefox']
    name: Ecom UI Tests
    if: ${{ contains(github.event.pull_request.title, 'ecom-ui') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Install Docker Compose
        run: sudo apt-get install -y docker-compose

      - name: create env file
        run: |
          env > .env
          cat .env

      - name: Install modules ESLINT
        run: yarn add eslint-plugin-cypress --dev

      - name: Run ESLINT
        run: npx eslint --fix --fix-type suggestion,layout cypress/support/commands.js cypress/support/e2e.js cypress.config.js cypress/support/elements/ecom/ cypress/support/pageobjects/ecom/ cypress/support/pageobjects/login.js cypress/support/pageobjects/utils.js cypress/support/steps/ecom/ cypress/plugins/ cypress/reporting/

      - name: Run Ecom UI - Chrome Headless
        if: ${{ contains(github.event.pull_request.title, 'ecom-ecomJourney-ui') && contains(matrix.name, 'chrome') }}
        run: docker-compose -f 'docker-compose.yml' up --build cypress-test
        env:
          PROJECT_NAME: Ecom
          FEATURE: EcomJourney
          TEST_TYPE: regression
          BROWSER: chrome
          ECOM_UI_BASEURL: ${{ secrets.ECOM_UI_BASEURL }}

      - name: Generate HTML Report
        if: ${{ contains(github.event.pull_request.title, 'ecom-ecomJourney-ui') && contains(matrix.name, 'chrome') }}
        run: docker-compose -f 'docker-compose.yml' up ecom-report-html
        env:
          PROJECT_NAME: Ecom
          BROWSER: chrome

      - name: Storage HTML Report
        if: ${{ contains(github.event.pull_request.title, 'ecom-ecomJourney-ui') && contains(matrix.name, 'chrome') }}
        uses: actions/upload-artifact@v3
        with:
          name: Ecom UI Report - Chrome
          path: cypress/test-results/

      - name: Run Ecom UI - Firefox Headless
        if: ${{ contains(github.event.pull_request.title, 'ecom-ecomJourney-ui') && contains(matrix.name, 'firefox') }}
        run: docker-compose -f 'docker-compose.yml' up --build cypress-test
        env:
          PROJECT_NAME: Ecom
          FEATURE: EcomJourney
          TEST_TYPE: regression
          BROWSER: firefox
          ECOM_UI_BASEURL: ${{ secrets.ECOM_UI_BASEURL }}

      - name: Generate HTML Report
        if: ${{ contains(github.event.pull_request.title, 'ecom-ecomJourney-ui') && contains(matrix.name, 'firefox') }}
        run: docker-compose -f 'docker-compose.yml' up ecom-report-html
        env:
          PROJECT_NAME: Ecom
          BROWSER: firefox

      - name: Storage HTML Report
        if: ${{ contains(github.event.pull_request.title, 'ecom-ecomJourney-ui') && contains(matrix.name, 'firefox') }}
        uses: actions/upload-artifact@v3
        with:
          name: Ecom UI Report - Firefox
          path: cypress/test-results/

      - name: Generate Log
        id: log
        run: |
          docker-compose -f "docker-compose.yml" logs -f >> cypress-test.log
          echo "test-result=$(grep -oh -m 1 'AssertionError\|CypressError\|failing' cypress-test.log)">> $GITHUB_OUTPUT

      - name: Test Result - FAILED
        if: contains(steps.log.outputs.test-result, 'Error') || contains(steps.log.outputs.test-result, 'failing')
        uses: actions/github-script@v6
        with:
          script: |
            core.setFailed('Test Result: FAILED')
      - name: Test Result - PASSED
        if: "!contains(steps.log.outputs.test-result, 'Error') || !contains(steps.log.outputs.test-result, 'failing')"
        run: |
          echo "Test Result: PASSED"

  api-ecom-tests:
    continue-on-error: false
    strategy:
      fail-fast: false
      matrix:
        name: ['chrome']
    name: Ecom API Tests
    if: ${{ contains(github.event.pull_request.title, 'ecomJourney-api') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Install Docker Compose
        run: sudo apt-get install -y docker-compose

      - name: create env file
        run: |
          env > .env
          cat .env

      - name: Install modules ESLINT
        run: yarn add eslint-plugin-cypress --dev

      - name: Run ESLINT
        run: npx eslint --fix --fix-type suggestion,layout cypress/support/commands.js cypress/support/e2e.js cypress.config.js cypress/support/steps/ecom/api/ cypress/support/api-requests/ cypress/plugins/ cypress/reporting/

      - name: Run Ecom API - Chrome Headless
        if: ${{ contains(github.event.pull_request.title, 'ecom-ecomJourney-api') && contains(matrix.name, 'chrome') }}
        run: docker-compose -f 'docker-compose.yml' up --build cypress-test
        env:
          PROJECT_NAME: Ecom
          FEATURE: EcomJourney
          BROWSER: chrome
          DEVICE: api
          ECOM_MANAG_AUTH_ADMIN_PWD: ${{ secrets.ECOM_MANAG_AUTH_ADMIN_PWD }}
          ECOM_UI_BASEURL: ${{ secrets.ECOM_UI_BASEURL }}

      - name: Generate HTML Report
        if: ${{ contains(github.event.pull_request.title, 'ecom-ecomJourney-api') && contains(matrix.name, 'chrome') }}
        run: docker-compose -f 'docker-compose.yml' up ecom-report-html
        env:
          PROJECT_NAME: Ecom
          BROWSER: chrome

      - name: Storage HTML Report
        if: ${{ contains(github.event.pull_request.title, 'ecom-ecomJourney-api') && contains(matrix.name, 'chrome') }}
        uses: actions/upload-artifact@v3
        with:
          name: Ecom API Report - Chrome
          path: cypress/test-results/

      - name: Generate Log
        id: log
        run: |
          docker-compose -f "docker-compose.yml" logs -f >> cypress-test.log
          echo "test-result=$(grep -oh -m 1 'AssertionError\|CypressError\|failing' cypress-test.log)">> $GITHUB_OUTPUT

      - name: Test Result - FAILED
        if: contains(steps.log.outputs.test-result, 'Error') || contains(steps.log.outputs.test-result, 'failing')
        uses: actions/github-script@v6
        with:
          script: |
            core.setFailed('Test Result: FAILED')

      - name: Test Result - PASSED
        if: "!contains(steps.log.outputs.test-result, 'Error') || !contains(steps.log.outputs.test-result, 'failing')"
        run: |
          echo "Test Result: PASSED"
